package team037;

import battlecode.common.*;
import team037.Messages.Communication;
import team037.NeuralNet.FeedForwardNeuralNet;
import team037.Utilites.FightMicroUtilites;

public class FightMicro
{
    public static RobotController rc;
    public static FeedForwardNeuralNet net;
    public static FeedForwardNeuralNet zombieNet;
    public static double[][] weights;
    public static double[][] zombieWeights;

    public FightMicro(RobotController robotController)
    {
        rc = robotController;
        weights = new double[][] {
                {
                        3.2443001192337118, -15.095421934965275, 15.484314426575407, -2.020596197236092, 4.232015659278296, 13.476912155981948, 16.668693471024543, -2.871580376772844, 6.227993561996015, 20.643873879303854, 4.194332019634847, 11.030113167670784, 13.832102383089419, 22.176640473627764, 7.390494000174334, -0.9039144487059689, -2.048194910559653, -7.868373729841536, -13.281420800643758, 6.848882285062365, 2.9774628322726127, 13.269103863259387, -3.0499254692256654, -19.16156598802528, 0.23091815665590032, 13.693221112023204, -7.200886313506082, -0.8556549753098244, 10.942610821012451, -15.792215484160383, 16.729645452308674, -3.5045915919441204, 8.437513974571152, -10.52026434059313, 12.549870356939186, 2.6292074538037213, 12.971708490050808, 7.522757822518605, 8.838019085015866, -6.538484315387912, 6.049770494036979, 9.55589143775361, 1.4991751750071403, 11.207741729965615, 8.999256446865068, -1.8546037274668228, -6.014998418409158, -5.100072145343819, 23.753882375287134, 2.4766904329472124, 3.938980535202971, -6.5082248490843115, 13.08706344585437, 5.958090784041065, -9.235669872271854, 1.5035451902647612, -11.021900147671667, 4.138596980429794, 7.376874506997038, -1.4407343261144592, 15.519883583418387, -9.961498979739396, -5.526919851020671, -5.764383339206432, -0.9069891395699671, 8.238001126080102, -1.2645469304341994, 0.9357794630592818, 1.4209580043749488, -2.513271016809168, 4.887216041717684, 0.7899594211249292, -1.9666915672894274, 6.966494320228679, -2.701991232850484, -14.004573477635725, -3.627764012202559, 7.87041744223552, 10.993970299363665, -13.62382974848387, 7.579506701482545, 5.991138643902712, 2.546718932684204, 20.95662668803661, -11.921685900658895, -0.0014303991623708934, -8.173803904569022, 4.394202314965065, 7.056214668030539, -5.100988917469928, 5.5892406450751535, 6.776219360980627, 5.300428625714264, 1.3420222815821385, 8.102770836076822, 14.838439161606791, 1.8264183721925267, -1.6734496424796699, -0.06322273087749242, -11.352107309507598, -5.368129106685661, -5.554764223649188, 12.806993518772355, -3.5548584639956964, 5.506605016344737, 3.6413894970916614, 5.273902753075092, 2.0179396922646022, 22.50277817773685, 7.502612042329424, 10.561536991799084, 0.217896845862792, 9.333245259406045, -0.1366949780488114, 2.0195234000812015, -9.986658816302736, 7.288343826566427, -4.717698973461907, 2.9495300056431653, 5.3848144231691135, 1.9392324225999926, -9.764865755691558, -0.13007715621944593, 3.9161648054486946, 11.709674584486548, -3.697705995010193, 2.8866055657912866, -4.112433116063259, 12.27027704083683, -1.496053057243015, 2.537680763512519,
                },
                {
                        7.7226169225626435, -13.46365514077271, -11.357042399567622, -13.28962609750352, 10.354252869143664, -4.665761869015611, -3.7227490618888446, 9.214736773218137, -3.8725746566757406, 0.11739455799800272, 0.9168360841001911, -0.7659235292756614, 2.8392952333775745, -1.8689443281055536, 7.901286953598461, -5.874945909253528, -11.272390157708045, -10.285659459302213, -4.42269988194457, -5.033024330910401, -2.002352343808472, 1.4730731895003832, -7.593227291039256, 10.188576220568068, -9.600462274611376, -7.908360001446435, 13.022603349448692, 4.478558056446178, -9.079524566730312, -1.8468103283071016, 10.490006699285225, -8.508036958919737, 1.364058101469833, 4.185672182884093, 12.363258138842763, 9.327589255350912, 6.537321695310021, 4.169949839861319, 4.090877808409853, -2.984062352352412, -4.396625105514737, 0.9710369804190764, -14.313569822744594, -4.402623605338877, 1.2735182536475769, -5.178941626382531, -3.2730232337317844, -3.314623780645606, -3.213938818618622, 10.09502829083218, 10.160708650622357, 3.514128992425927, -10.55792135455228, -2.5430687118026443, -5.5116512314634125, -1.0701264478176666, -1.70892764687, 20.02444873657952, 5.655441800080081, -3.68408844824257, -4.067067425859349, -3.3484523354813125, 9.891318724185135, 5.661799176562073, -4.010484244976424, 2.298948248172687, -13.779792830260192, -5.1342797721228415, 0.3154337656181002, 13.789528822187123, -4.50879407238115, -4.3590547300967275, -9.230684509495003, -3.7486829906559804, 9.722930823776595, -8.930015753185005, -1.3562488425240162, 3.952990844749682, 1.6266101268690456, 1.0069654262690584, -7.133002907996315, 2.0078405947960922, 10.73284633197416, -2.4383571288313046, 0.5834671783628653, 8.914825374624316, 4.015192008303913, 6.283183217300324, -1.8244044921731717, 5.205205908972988, 0.6086090871828311, -2.8480478304864056, 2.4955671461589977, 0.6282712027981848, 0.3380211057394159, -2.2860775394906985, 3.427368339185309, 4.876741865173409, 2.9477317378300727, 7.013383021247035, 17.26939037794703, -0.6147944902934621, -3.7463319307897662, 1.5922715608364921, 17.17561646479148, -8.615779498138817, -7.0927727684268564, -5.953092716913684, 0.7780982241950504, -5.88629754932992, -12.46008024543303, 3.9743530165513996, 3.57452801690803, 13.564431077581014, 0.4152488455700931, 4.400729031786269, 4.1156730316997585, 5.104077297314222, 1.9741043136108376, -14.814912286408212, -4.306111871604846, 4.4388027553879965, 7.488963591554422, 3.3024256047925187, 1.958557083971028, -7.032198597474803, 4.553142093882732, -0.03595787667118544, 4.696933008666011, -5.128407046679379, -0.6563765413677655,
                },
                {
                        -7.607052884360578, 7.638908106268735, 10.354452171924832, -7.478580341464343, -4.044165362613006, -5.412327564451467, -4.518754487237769, -2.389808886447088, -6.269075462413632, -5.513779552420289, 6.426216423665611, 3.394663348300136, -2.0685817761976892, -0.08564429986575335, 2.653552889401867, 11.824240375389552, -2.3463817282692756, 3.519934107491218, 0.8969808044498551, 4.880953432383863, -7.6783464584999805, 16.179988865008685, 13.335549260965145, 9.76425124979657, -2.924361052942054, -6.156698126920857, -5.758504847844218, 0.6450052106863515, 3.068292351882084, -4.463432032037512, 4.7566009612045335, -18.64662828353213, 8.485037324126095, -7.100935130692898, 8.1777735312203, 16.391476619468108, 20.965290601510798, 2.9649866525129136, 6.6219031299685165, -2.143509144607646, -0.6104037582284426, 13.345841656117766, 17.00808532894892, 9.897468756449875, 11.073695884341577, 1.1486469228367475, 1.3706268826601964, -1.2604135547364173, -14.327703501985194, 13.679067822179723, 1.8698662925102219, -6.8289375776901595, 5.425206547015925, 9.0386222868654, -1.7001386665706442, 4.511068379802163, -9.69600280484039, -14.763113220206487, 5.2260937097256, -5.197300139452796, -3.4649025167365792, -1.7724971786024504, -13.570135047611355, -1.634930039879051, 0.7815479500859894, -0.5726100539010601, -6.823619730831308, 7.453078936460679, -17.16439995002289, 6.206035822135028, -6.497777741259869, 17.433517674456073, -2.6734167549727093, -12.538474989039889, -6.498230224540457, 6.9292157781551635, -12.776311457497009, -6.701486607925262, 9.91623278733866, -2.8370720704561228, -7.701901516691301, -10.41655502816047, 11.286541335967309, 2.450671970635821, 5.387012514571845, 0.9699934559696022, 4.4176599405944135, 7.235224239096101, -14.376409373655365, -5.95039169743133, -4.905342089554304, 4.456157487437995, 16.648112694254948, -7.036723200334248, 11.57458283418956, 10.008492868022902, -2.261094845135069, -9.439444649418936, 8.678486396850545, -1.1383575053148913, -15.938298144254263, 8.635870883114956, -20.596158028725334, 8.206601769384188, -0.5768310721074279, -10.472097906524855, 3.290922239079819, -5.954801130015192, -2.3359865277302365, 4.204866787768959, -4.536871335281006, -2.069661503963017, 5.203311331232401, 3.7217180651044433, 9.417479795074813, 3.859070742136736, -0.21721792725796463, 8.815956559391768, 9.252754214253242, 6.812587605566285, 13.389616136726264, 11.450503245264047, 3.0690590411650374, 0.9244453758071933, 10.046895131579824, -9.62244402910001, -5.020257547519822, 8.151129047128205, -12.400001608623423, -0.9256465687161818, -10.83353520034254,
                },
                {
                        4.742618371173613, 6.2135076432737755, 4.505857600785824, -0.5983156635143293, 6.564855520614579, 5.724900051921284, 3.1516912656381, 1.2777776764031483, -2.632745780433775, -8.179683342294753, 2.4002536433504496, 0.42308329431423586, 7.881949387307615, -0.3341185525162219, -0.7207724774039326, 1.8224337584157115, -7.063259697340949, 6.224518747431589, -1.0845124940695752, 5.6659466756891455, -3.215857991650924, -2.73004786620095, 3.3469261285355754, -4.5769862840680515, -2.7906387357075144, 5.889076607789516, 0.40438359274165925, -4.100765915456757, -0.9343329818564752, -0.7595760047358981, 2.218004260668005, 0.8452463364788463, -3.2878283652588483, 0.8234067056155704, 2.517734696438609, 4.254619928299563, -0.6861633831299414, -8.014160104294918, 0.8415232734242887, 8.318040073595075, -2.8077151149075363, 1.124927914775312, -6.489698441636798, 2.7001980400082117, -7.452210813654908, -3.6813129579035984, -6.609713250897005, -7.800118361242387, -1.0458203479408383, 0.6232225635499367, 5.354227902729509, -7.235410378663577, 12.39788001132187, -3.447617486183617, 1.0731742197343135, 2.70663270817378, 2.432425830301053, 0.20065210437538405, 4.98766229213907, -4.101501083646811, 7.5610313703699985, 7.484491004915866, 3.470585467006959, -3.7058538767085603, 5.761486431835288, -0.22681002932967823, -2.2876758332050304, 11.100192923011447, 0.4919982568843174, -1.9957748485248406, 2.377232002786771, 0.9382155418529257, 2.0259351093883904, 5.635453233988449, 2.0700066685389618, -0.765268433120365, 0.8399959533220422, 16.67699122413654, 4.704108441732646, -6.357015688549593, 3.9449259753770622, -3.3705740703464344, -0.07242874171914467, 6.101257956940259, 4.307645685020517, 9.505898616087165, 1.6770920282035444, 2.146018037446208, 3.0351448334612963, -2.3069591240307608, -9.171568569176342, 2.4303561561761002, -14.654812425259133, -4.575207333346053, 2.0909951114824437, -5.0445670750262455, 7.608393096748791, 6.785094295846654, -7.473062419586437, -10.465240071178423, 0.9326957768225258, 5.528567700288422, -6.428159307451189, 0.43944502811325625, 2.9480170977446614, -3.1824066347709112, -2.7241783536973756, 1.0871778295847483, 3.75768880710448, -1.5567261264153178, 0.3937598616558373, 1.5814939546730957, -7.368580287536056, 4.552837065937607, 3.062454073024683, -1.376094868184907, 1.5765167591932063, -2.6099345613766145, -8.72340137179524, 6.529468035670058, -13.431022325607426, 8.850009630222603, 6.025177742855354, 3.470935073440918, 10.533638577916447, -1.5663053736754777, 1.1415935105603126, -1.8007171798938808, -7.319392859694856, 10.751758478764364, -0.5343859702320932,
                },
                {
                        -15.880382679444091, -0.7810878470522832, -8.609738786790055, -1.4648039539138091, -1.3074746748310355, -2.704700421568953, 9.198708623699408, 4.015524478458914, 0.8244888917452917, 3.42403820952892, 6.706887069646811, -9.546871074328324, 0.2566089206051587, -3.3444078707358385, -2.9919004336810824, -5.341135812364934, 6.944558193940548, -13.184374856056577, -12.064378597519648, -0.3273587269763367, 12.09906305731097, 1.8600549558007633, -1.4345134703906113, 3.6160425704209573, -10.373853521762396, -0.8149727990822415, 0.3094439361675743, -1.7336462999319011, -5.98917445521419, 11.864784358691866, -1.881523794187594, -1.4632248670402321, 3.3732438504509985, -8.580904196275212, -0.10395945061799525, -1.6454193461256548, -6.083838868675167, 3.6386485244635955, -3.3755871992260684, -6.240748572017832, 11.153360140953811, -1.0696858047355775, -2.223943996949508, -7.337309136808205, 8.940560790245748, 7.210724297137542, 7.677895096332916, -8.98035347330243, -4.24109801313299, -1.3739327876692218, 1.0403671835827581, -2.7551005151011463, -1.8828909841075188, 2.1202432413216563, 13.79014674876638, 0.5656483903118921, -6.96728154671556, 0.6210079159318613, -19.128972714096886, 5.825165391912153, -3.859530681172953, 8.058558840182991, -7.792269069974632, -2.426437888607155, 4.0306065819387085, 3.702483425909086, -11.601414779178844, -2.291291884374952, 3.5146699890964594, 1.591818117178002, 9.221793159848414, -2.4171866908669117, 8.831653959827353, -0.08012509770200764, -2.418276041346351, 2.58765580372867, -11.182853084747375, -2.323050088588863, -3.219948757626523, 9.780640432849482, -0.3198723570163593, -6.1783990680164385, -3.8118034700526513, -1.7634335543981403, -0.7581395875259505, -0.49766983769746964, 12.911116908762672, 4.249629975983287, 0.1351693421934348, -2.4351528334597936, -11.456232167181977, -0.8598177719807996, 0.59503850363965, 4.2144479686711325, -1.6639172795051056, -10.580087214553469, 4.2220974716756805, 4.916275527026043, 4.246481167557745, -0.26272335269012326, -0.3420411446362451, 4.0390239643923325, -4.542560412034801, 0.3190253363120553, -2.136646216975914, 6.095914660761401, 10.496032949329152, -0.9483320764951157, 12.161017816029496, -7.414057065049962, -0.3974783457376416, -10.15552246762355, -6.8019981291246525, -8.934988217269627, -1.0079813247914298, -2.982670552635255, -4.87603787855563, 8.400160036373805, 0.13159113361920372, -0.489007131252574, -5.44736631896006, 6.953540519277128, 13.589255172235779, 8.345311442221858, 4.528220144359725, 0.62876385774457, 4.811755125172263, -4.682006870148255, 1.4516799838666685, -3.2236281968958402, 3.466634721170202,
                },
                {
                        1.8160443536897772, 2.3738329742198547, -4.037721113926709, 5.745613525497035, -0.2918683657788672, 5.9052083862071125, -2.5739273542769276, -2.877861977867783, -3.8020215283671117, 5.461678858614671, 4.540889734873819, -2.074928224590309, 0.17673897921534665, 8.37509236275527, 5.661707888536048, 2.6958799975166996, 6.187841141446506, 0.7311397583476372, -9.165454996948426, 2.1532208404356923, 0.030724603040940837, -0.8844641229677248, 2.3805392712613416, 4.7894415867703755, 1.6325364865619347, -5.628674209463153, -3.9316463448629366, -3.479417021622832, -0.19109673989976053, 4.452501406725232, -2.4707339844664618, 6.803947966079693, 5.53009855865239, 5.320604992657591, 12.413701248047552, -0.03935259026801366, 1.5203525090109589, -4.798586189766119, -1.0452200648700123, 2.9661288583130956, -6.3667284100947565, 0.8524852558309649, 5.806998706188763, 3.3984841128946783, 1.7741447138694528, 3.4149498180092253, 4.477841599400832, 1.4389763287268922, 5.310672741670124, 2.3876075784513255, 0.648240043811575, -9.30744333164015, -7.630575808067927, 1.842901306544839, -5.776205735276807, 2.1583506648754245, -5.057259521157622, 2.9740630683031486, 5.580315880554969, 1.3692870930369372, -1.1417631582759997, -1.813656093238735, -4.377895358137514, 0.20916652666808316, -4.25450681427265, 1.004551182696432, 3.9074584950826172, 0.4325805164400123, -5.304819093723173, 6.837180618131565, 6.918449430181948, 1.2267491127026435, 5.9674933649328255, -7.729669461433357, -1.070610043689702, 0.759631625502739, -0.25475563393290673, -4.2707353749544, -10.317970998659801, -5.21080806538303, 6.185462432952494, -0.09339565467681196, -5.944742161932382, -0.9251627378096267, 3.333414261327187, 7.371732361275397, -0.1849543245241665, -1.8638682889769298, -3.3647556689612927, -0.6098450987603179, 0.5153393818823142, 1.9466581700760965, -3.3150314822593367, -2.099814486077313, -0.32361576727185776, 4.142504722091996, -4.687750795507959, 1.8338015560474266, -6.54692264077303, -8.975463301316648, 6.250078914183405, 3.6419973395914536, 2.8187234526637135, -7.464537171439019, -2.3372403907912673, 1.7574617912931263, -0.12265121033848382, -4.56867479426025, -3.300646931694732, 4.8582244196420294, 2.0269814771246644, 4.230595110198668, 6.206497515482469, -7.3746505654315335, 2.046991827107564, -4.5531172044796975, -1.5447352871216395, 3.9009966359306456, -3.6973053984784077, 1.3512762232056097, 3.9941240816576875, -1.4289299463341514, 3.6641027176291328, -7.05208013158463, -0.9051671829350189, -5.298106465711462, -3.684711609453518, 7.307254348081576, -6.67382395807183, 2.4881336915953662, -15.655709846069694,
                },
                {
                        -0.2816735845088063, -9.312823523329252, -2.7174804234539187, 6.416534512156127, 8.74683967541635, 10.492000261473303, 2.68687247197915, -3.938055907601155, 0.014874085688229538, -7.446900094621156, 3.587456903455249, -1.6971540564226806, 1.2095476837053956, 1.3313035482998998, 4.167040258308733, 4.72655681374008, -1.8318966674463018, 1.401912222057711, -0.08383763968057112, -0.2151321666022056, -6.7783769110573635, 11.213050941538265, 2.5426227737620315, 5.67913138240987, -0.8198408628773608, -17.797996656907742, -0.10361808153068063, -10.987227355775671, 2.362527853509023, 8.337208728003624, 15.315857613742947, -0.8768518641654933, -3.2318823885845687, -3.1108541267635483, 9.534905144144556, -6.15218861974959, -6.0757948319440445, -12.71655700219614, -9.203434081512444, 1.7034588683399992, 2.5755063169074615, 4.440764294457713, -2.1967954086330805, 6.07411631224561, -2.2000121993801187, 7.662588892816438, 2.9500515804702774, 4.1678713356826655, -4.198623541312743, -0.05986034430987877, -4.386530993842286, 10.518083793343237, 3.3896336663052935, 4.242073785041861, -0.07920452577368291, 10.143640599575852, -10.288555812302137, 3.151515632912572, -0.7684262894706281, -4.241642597141216, 3.4276687599788995, -3.5661145268529184, -0.6172855972303872, 9.241280867836016, -3.139473006315312, -0.6153459893295578, -4.421932825582238, -17.80850923568707, 9.116970908148701, -9.176320871516294, 19.924510187439083, -5.141577698056641, 7.799243995454804, -1.222822324202702, -12.850833748343868, -7.531135484515689, -2.736565912830389, 1.52414880401562, 1.3679757201254181, -3.5656443770357056, 8.56970806241011, 1.6498091377340856, -8.84397329939016, 12.881363198763143, 16.07070027066332, 3.2320431295399614, 9.301101898104797, -2.1937439197600006, 7.458418210277957, 11.893849247208616, -5.332195962397732, -2.196962858101166, 2.6191896020446626, -0.5290255162946925, 2.9105773971744484, -12.96304562598609, -5.3653122498015176, 2.004202895951002, -0.5037582549825008, 13.268761919810862, -0.5080562729532245, -3.341611593099765, -5.912706472933021, -13.748405313393237, -14.111303187373029, 12.707801447572674, -6.561557843290027, -0.5557232501555462, -4.756338483707063, -0.6856899318714125, -6.85860085503831, -3.03797635323506, -4.615369823737703, -2.8419954365284896, 0.14528158703972055, 1.4709416297755507, -3.4174089438397455, 1.3455648498037527, -1.9044246213735638, 2.7455605868536765, -6.161888889395051, 5.4740300122824594, 2.591383008016377, -7.919218023342785, -2.740932797380732, -0.25045487701585745, 11.145469910496484, -2.6170180464493518, 8.20806463193283, -6.459169845667433, -1.578647790782528,
                }
        };

        zombieWeights = new double[][] {
                {
                        -1.9929435204809929, -2.718193740196392, -2.781993250398117, -10.361396143117378, -5.161556387115122, 0.5256533551617966, 4.4414957561990045, 0.6992495319277215, -9.138454559011173, -4.990125218253626, 11.884426153645398, -4.413012764851942, -2.6727671465147096, 5.370650398051258, -9.409264791763773, 0.32020842809419514, 3.094230961350177, -6.880013797524041, -7.968610243624142, -6.347418086413457, 9.783022602001205, -2.8731001895618298, 2.170566187744836, 3.9317916160814907, -1.3096013228937031, 5.242290871004701, -3.3970233198844118, -0.41909194349871, -0.7893730021802507, 0.3635396625331546, -1.8353884452391567, -9.659879747562094, -0.5534543206723255, 5.091569949322405, -1.494929814452373, 3.209084411633418, -1.927777205571535, 0.12585840744564433, 2.1426518046330947, -0.410621015222901, -3.0609676614440025, 0.390957972246668, -9.467285832020236, 5.119084290373365, 15.308801750615512, 8.32268259003204, -9.180569934409764, -4.7340902977220765, 18.40716595851307, 2.9132755346138572, 2.959608924485822, 2.5965046611017164, 1.77682808742179, 6.092753822016214, 0.9851473079875303, 2.052970354972982, 1.3121610673867166, 0.2510569009526629, -1.3123837805331018, 0.8663939887286684, 3.0644213353255076, -8.53587681747853, 6.472242910376965, 4.241534898136873, -0.21032740918633072, 5.891270311908762, 5.411237896326676, -4.460657615521771, 4.298786152798673, 5.361581737634058, -6.686967677693499, -0.7583279057437733, -1.3816450594007772, -5.723118545779952, 3.4939509791833037, -0.06864463380669517, 5.420222931016577, 4.970099321593796, -7.96944450787199, -1.9018741876790277, -5.040357975716996, -5.363696047532517, -0.6036548311160571, -7.907361356974958, -1.0934900063104314, -3.5545210972946415, -0.14906773811033563, -2.0094564469862055, 3.8691481042287448, 0.5643793987879671, 0.7819540395715838, 3.707356415320868, -1.320893147105673, 3.4654162076353963, -3.430725064980718, -2.1201379342393714, 0.8986671064633582, 1.3061909676989387, 0.1589875111927017, 7.317076578516857, -5.128252307907348, -0.7855714641511211, 5.251425050600665, -1.8243417683396164, 2.38418826867956, -6.096001198753397, 7.154920123164731, 3.525849349818698, -0.36319985578281744, 4.976739042801574, -2.4068822633506723, -0.8894591352536787, -4.366567004076762, -4.167182729949596, 1.318214797020656, -4.542654034498103, -4.573448219549799, 10.99076567969287, 4.526071629545689, 6.851732587341748, 2.961820986591065, -0.2006445704332041, 2.210604306186285, -5.309296538573862, 2.2562543876823105, -2.6070378241228336, -4.382808734063782, -4.586660837816873, 0.9108539802689749, 1.19730046129175, 4.042986327422849,
                },
                {
                        -4.739431028163109, 1.6603933573392873, -0.06584922249188331, -0.5915177101438501, 2.2777993938646492, 5.372597958507266, -0.8200914217126409, 0.9933829639432179, -12.118636948943688, -0.9180229420740158, -2.3437819283305035, -4.041759415532495, -6.976644774241678, 3.4524942467459914, 4.382594272814057, -9.325827015876934, -4.6571659141291, 1.2368437088594892, 1.6676117145916152, 4.303014143093439, 2.5966203499857636, 1.434005846881142, -2.719299997827032, -7.290999618689405, 5.155082788595302, 4.278037538801708, 0.3322507966614203, -1.6102222128439292, -2.801569136740347, -2.323106670947932, 0.6473128679668235, -5.742310249517216, 0.7397663806769832, 5.78814096419325, -2.0411671662133566, 6.892514172537863, -3.0795601089879625, -1.7370743783892473, 7.244704732224547, 6.328996922589134, 7.400724814290282, -8.563767796369634, -2.1980238375888677, -8.934725431544488, 0.7533808150014476, -0.6088174037789323, 0.42162316535251493, 6.1570194652006265, 4.055273807560267, -0.5995030833098598, -4.84422421135838, -18.377810846415155, 0.7521790796462929, -3.5753028108796046, 3.933943691012539, 2.3379320358252595, 0.3197714367538965, -3.273218056175502, 0.02027736256303261, -2.186668323698242, -8.16600566394627, -3.4202332450485136, -0.8194303100869582, -4.710777110196193, 4.339352343873424, 0.41880723277169074, 4.612150850966833, 0.3388498836092515, 2.2310873523129735, 9.595005037265837, 1.1714109274504358, -3.5020237024762246, 1.7623708315061277, 1.2279326601957838, 2.75386430175333, -5.2846049811416425, -0.22437957821870214, -1.8326260487509463, 0.43831577669709393, 2.052685399045858, 2.264141815454966, -2.2289430860982757, 1.2747048641189858, -0.46055502061908526, 0.05399213488478832, -3.3536638442873237, -2.7677041307939887, 2.6933688251643746, -9.869374410805522, 8.612031302568646, 7.281689626567469, 2.9500722419907235, 4.128327875918277, 8.236279726826632, -6.38912282542078, 3.158964606184173, 4.161024618443678, 4.078534305982514, 3.874323555257776, 4.342219004838516, 3.4657549482854004, 8.091112277063486, -0.8295630411399517, 1.7220427789181505, -2.9604799079312527, 2.4840249890742756, -5.441915173878539, 2.558172822364511, -6.045567818481917, -2.4136655686875166, 0.6046441475456611, 0.801937576034697, -3.29598578247219, 1.0812237959174222, -10.15810130263933, 5.881919066363946, 1.0536500151809853, 7.750231977155769, 2.622993423986373, 12.921073378663342, 5.2047921593522135, 9.511870096214817, 3.3101101991174664, 0.8411369627403753, -7.20531071338143, -3.0008354002227335, 5.344424929095886, 3.239186187204586, -2.644739357079839, 2.8502927345486464, -5.992644826269046,
                },
                {
                        -5.679672431323985, 2.7861629757287374, 3.5503648088298463, 0.8213280190682335, -5.057373326328142, 12.68621973052368, -10.385731151067187, -5.926100154987439, 2.2777719522216118, -2.065993995955676, -6.1623236127701535, -1.4786260041334565, -4.048939832236475, 7.140723564637216, 7.071047742985338, -13.255561800281193, -1.6697337275499577, 0.27890865912430673, 0.30881527311478485, -9.204946302494257, 3.2213050752255135, -2.4426979367777824, 8.106837959479163, -6.227348608053726, -3.683425957229402, -4.483071724031702, -3.4707817340188263, 3.1662773129527753, -10.719305617045212, 2.7050934369046398, -2.8773531519669078, -9.138241399147955, -1.4201899380760055, 8.52678288685806, 2.8995643877095416, -0.4967538272532718, 6.0477819351756565, -4.584819213841073, 1.1217911312701863, -2.74321299377177, -6.192231124469581, 3.828690313926559, -9.092481397023354, 7.673078100379876, 15.679560726368557, 0.3077613581307803, -8.196002754142265, -0.6386204740465631, 2.3125095530931103, 9.34298498567441, 7.045066477279753, -4.635247002987438, -4.967728564302793, -5.3320296492726955, 1.1471005884702568, -4.400711263083501, -0.16002857388370056, 2.990807682029573, -1.1637854490568291, -5.117245370149873, -3.1314694335670707, -9.846028954123637, -7.229525862629467, -7.507563875538881, 0.6794130888746338, -5.605109899205946, 6.083074134497474, -3.1106500268373973, 11.576881290015105, 9.073106098561707, 5.967062283667928, 5.138897837665247, -0.9656709302520179, -6.435734221616657, 1.807945333088354, 10.343530571917109, -4.994833493511368, 4.693673892732814, -6.754899922026793, -6.3838777456872995, -3.672742750647667, -5.48482637067665, 4.088950911696195, 9.967991730402725, 3.696983551506966, 2.7562861939924868, -2.1585795268917707, -2.3201075532748496, 5.095245326437454, -3.155659158431964, 2.924928125618796, 6.7978846782511075, 11.610574474523911, -5.962371074257002, 4.050912091240816, 4.853577120947528, -1.7812084294471133, -8.412401587512274, 4.7755685169420845, -1.4190765387416122, 8.066351083230863, -6.031021973014501, -3.8745754829059544, -0.2973115223874343, -1.3709447136204427, -10.131781418327982, 2.127667776019541, -0.9793039122846998, 3.4996622308362353, 8.42847437407921, -0.26194958280348457, -1.9739857316901595, 0.03088954063065308, -3.9670909609256477, 8.14319785677443, 1.5928559300272542, 6.678354714177418, 3.098459084630618, -2.815138480088818, -4.026492613079467, 5.674039443925422, -1.0903426766816524, -9.975542922867959, 8.528677684850411, -6.366155357677179, 0.12732979430849148, 0.49426768161434453, -0.5133699225112208, -0.5735224861217803, -3.218567745505882, -9.968906778945199,
                },
                {
                        0.8089657912669469, -4.563557130712712, 1.2608237953363075, 2.0990524604104315, -1.0629070827819918, -2.604279671625032, 0.8483855774206515, -0.8847679690027379, 0.17418259684996149, -0.22255023665985893, 10.926396665065202, -1.3168837386639962, 0.7337717649662581, 6.293302291456059, -4.679389839859197, -1.333412656957104, 2.6544246820749944, -8.014285540752008, -1.5433008035663036, 0.2856563483154173, 0.7667377644872851, 3.8276288251182575, 4.195644134030511, -1.8788478015807188, 3.5598974337625586, -3.5232603336137225, 2.775342945690076, -2.8743853564384136, 0.4198640385863943, -9.200260985090363, -2.9593567448738956, -2.25189775355426, -4.376732084908736, -3.815224074589974, -1.376453035131001, -4.841244203294746, 4.975392116307203, -1.902819764228413, -1.0363079283733019, 0.5234333082947573, -3.36219113361377, 7.369875418535048, -5.454748397855889, 0.7804866059237154, -3.4445115620003124, -2.850603796639372, 5.466958461448282, -1.637482130743014, -0.6489636048345848, -0.4686431752370158, 2.7887601920905594, -1.1183751038889802, -1.7062813507681598, -2.313110756032833, -9.151291374817236, 1.5401173035078979, -0.9138774670447494, 4.351548539412864, 3.881326583176271, -0.7947035136304141, 1.4851271306189224, -2.3544946485742884, -0.5221643229712016, -0.6689016303161684, 1.083129364057565, -1.2309683967567944, 2.7599798341955224, -2.486606275436187, -0.9776770475652634, 0.9399435781553527, 4.10875242296112, 2.2991328349879154, 3.755345982654738, 1.7667464284695857, 8.531213579725623, -0.6339041945773325, 3.4074263602840817, 7.358820119011899, 1.778390518513266, 2.4072356476716084, 5.825781273687726, -0.9343686880338649, -0.9585053312073871, 0.175241365957993, 5.566557924399394, 4.304073823275367, -1.041230258501333, -2.970778545530164, -1.4255408878046565, 0.6550991040481027, 4.805218427459718, 0.05778103101786437, 2.8244779003049385, -8.384574880378493, 4.604764203609315, 4.78259526548247, 6.5581156037603705, -0.6894205040364744, 0.5119995993422979, 4.002837020526919, -2.4677168407679293, 0.019833663416428324, 9.213826185029564, 2.0412312265562162, 0.25983811457474826, -2.2386959716468886, 2.910862220599188, -10.966816240397948, -5.238261851953762, -4.677346884354505, 0.6486770925398053, 1.2375494481013125, -0.3429541307986897, 2.120605410799488, 7.518795593757132, 5.878780928911931, -2.2872998315611657, 5.394521785029399, 0.8853354241369921, -4.282623340590136, 2.9495811916639005, -7.363674609873558, 4.259593321910783, -4.237327443541573, 1.406132702628141, -0.9914006720687498, -0.8064528544780476, -1.9057488417842265, 0.3629725033574566, -0.980089273813618, -8.473187392779735,
                },
                {
                        0.020809029808593615, 1.2206639719407262, -1.2890259062331768, 5.8962884434709615, 1.4168504884756121, 1.0998977583003313, 1.878759153217684, -4.828258260409834, 4.522201196718828, 0.5130097833327392, 1.8009524527702707, 1.0943106106007436, -1.1569499142472939, 1.3112266148296965, -3.024348356835796, 5.9580255836778715, 0.12231861156237167, -5.671397996278506, -2.5943776526688507, 2.2469589755470896, 4.8577569758685675, -1.5326502660092385, 2.7313362803779144, -5.160451739701027, -0.6692556397627256, 0.8425698639370981, -1.7943287688164997, 5.357479584343343, 2.111343017863669, -2.1744320161878785, -0.5758108513422104, -2.8417256543320693, -1.689685940393546, -7.296069510623326, -4.442176093634002, -1.5683166048150863, -1.3852839384683069, 4.363614436516123, -1.2733429132974745, 3.043535369789758, 0.01365286215689937, 2.7097696622739567, -0.21103204367198464, 4.2917125879869165, -0.949001165484766, -5.900948479769176, -1.7094752499194297, 0.13844780169326687, -1.9920910232359152, 2.9164426037626634, -3.432679447869825, -5.435825185093653, -3.0019910487810617, 2.34817335668415, 2.3310886847801213, -6.681466149154079, 1.1960855608954375, 2.187845618099807, -4.569901986729389, -7.310436863014381, -1.0939098458939442, -5.300901588154421, 1.850663648363863, -2.752970774615948, 0.2736818476305275, 2.3503676632554664, -2.3419668528654602, -0.3252356577704862, 4.640153688327036, 0.7205082008607635, -1.8249866549577303, -2.169211671361281, 2.1669255449360865, 1.4136438173669015, 6.141526916600593, -0.244473846451018, -1.1317650523413922, -2.8330777408389314, -0.7501917004829679, 0.22110595653803172, 0.1821298084636812, -0.8753239794147578, -3.6483241709355054, -3.1448895125712353, 5.684415792873872, -6.558910394497091, -3.831612762408737, -4.619400543107839, -3.8945420961143915, 2.1789880269643223, -4.624476834202993, -2.569746658268887, -3.10829542191188, 5.696710634517455, -1.1933429500105202, 1.2879561763769245, -2.4549417878519373, 0.29053094325493056, -0.025918677004738225, 1.1489078359308817, -3.295803789090043, -2.3460950238721288, 3.496014929656068, 3.4264564143502856, -0.9931397267317432, -2.325822022761915, 0.04869544473049362, -2.8172168326639246, -2.424619884719688, 3.5111724202992334, -5.968434504189474, -5.377594597011996, -1.1991697984488368, -3.5635064841400106, 1.7972525113002489, 2.0846996221943077, -3.8255527238663096, 2.6193604157434085, -7.117581647541461, -1.1022973006122045, 2.882046867593827, 1.0790210617286855, 0.7592757666077677, -5.516019040847876, -0.08277535080675652, -0.039441243611142096, -3.958201184399644, 1.3056439042510755, -3.051519830706079, 0.22254311199323007, -2.054372624390306,
                },
                {
                        2.994868626493669, 1.8673561370993486, 2.671419098498129, 5.3047686828244505, 1.566088729301251, 2.8556227705494774, -4.734975196150595, 1.2091705614739081, 2.556470853648104, -1.870074301437991, -3.3612057185762056, 3.348491445185249, -4.394330205356195, 3.040614811514334, -2.3182488003963595, -6.25062835059516, 1.7667133635051302, 5.026976899827642, 0.015481871259790392, -0.5886416696979597, 0.6227235168125356, 4.689916271889224, 2.806279182092705, 0.7383567514053122, 6.384877149316779, 4.032420391903085, -0.07004237227967222, 0.48723896603738603, -2.156772965946031, -0.8439503375031853, -1.1102702394066821, 1.175675625391223, -3.908794083991174, -5.313360425802812, -3.8700687344557823, -7.993690952427728, 0.6576944514542297, 1.2322729372110488, -0.02513046585323986, -4.262954633127174, -3.429696486570105, -1.0215910756416628, -5.734502378872992, -1.3868677704895598, 1.4679638400280584, -1.3602125951676163, -5.045779276397138, -0.41636002539626593, 1.1507306626938696, 2.0678225779763015, 0.6517263932342879, 3.0146944754616114, 1.1866358344443866, -4.199484629653095, 2.32742403421192, -4.1325246939401135, 1.8344416748293815, -2.4600918541320227, -0.671190911527144, -0.8083042014308341, 0.7354172965330465, 2.4049827950595803, 3.1760582802298924, 0.8968815011996245, -0.9322550718829958, 0.6087127437611068, -0.9722497266572615, -0.723399513171333, -4.479857657548154, -2.6164565836290365, -6.646360938416701, -3.060479669284855, -4.6417495556414385, -0.2761500744785633, 2.4782003352542645, 4.148140160095657, 3.7578516574322722, -1.2303576012727628, -0.09278472914603672, -0.9854345913182074, -2.5550032867151558, -1.914187641192026, -2.0134885532682283, 5.688605617210333, 0.024034211306603714, 5.3952186186476885, 6.8363067986974135, -1.3029595482079188, -2.787902944348346, -5.381163594614206, -3.1339759709580215, 1.4121832570805606, -0.8640320904391917, -1.0246352876591742, -2.9017539716424703, 4.799776334538114, -3.182981116394052, -0.8480484553318174, 1.0288869087866976, 1.8759376442595823, 3.759950893959138, -0.5346120085170141, -2.6213434695622895, 0.943008414123403, -0.2279725471838523, 6.150272098888192, 0.27794347390315244, 0.3437027561755347, -1.0452641026445713, -5.748359475301066, -1.8635819266752636, -0.5327260269031745, -2.342816467178732, -3.307163002483652, -2.7501804125659692, 1.6059410756168633, -1.4303106412612128, -1.5662234470002754, -4.382142315151926, 1.4896020010878226, 2.7731132289721288, 0.5870145307287885, -3.969122019600843, -3.7386657871270192, -0.5790417560879223, -2.3627141763398236, 4.209020368859295, 0.7020296494164646, 3.7503709587867227, -0.42347708302402537, 0.7890752590795528,
                },
                {
                        0.30141887809120316, -2.6151035352352494, -0.9213090306629852, 1.7452360452985294, -1.2753900302529797, 6.780135462779458, 0.3386167570148174, 6.934898699865512, 0.05896170482570706, -5.7579827914596775, -4.884076291274872, 7.776893682892098, -2.1828560951817506, 0.1913593273484676, 4.858388492065563, 4.542227695003006, 3.4087546405322917, -2.705646062122177, 2.6873720676195223, -2.2291094941104137, 1.999293733114823, 4.250980546114022, -1.8736952296612674, 4.8087423988566185, 2.856181355576686, 0.003178258741513701, 2.7632925063950995, -0.577112482396175, -4.6555927769801855, -1.9825716383979777, 5.674804696424152, 4.311469158000369, -2.4253489898969556, 7.399544558526482, -5.827102673303381, 6.1465667836195, -0.8580679720372836, -0.22768464088955342, -2.167485016789292, 7.452397518583795, 0.09146225570164071, -0.46658423559722567, -0.34493875610072366, 2.679756333250078, 1.8750208635608785, 7.810004351064937, 9.401075041445374, -0.6389819751392661, 2.8845811720262637, -1.9220175985531889, 6.861024895930924, 4.792269156332624, -3.4678407418694057, 5.8067785123131515, 3.9452118127825218, 6.097181291562499, -3.6983561768473567, 1.4625686003041072, -2.429443835740654, -3.141450074797609, -3.5183329677642883, -8.449091004996447, -6.280863912636202, -2.0569238977106883, -0.9375594016664346, 4.9802979250052415, 3.7476253118103413, 0.5670183605056368, 2.7887276231152875, -0.298490781970308, 3.810005884417389, 8.812964151890926, 11.114201940409458, -4.614437287572279, -6.362440365691955, -13.867250054804234, -8.292688980059763, -2.640034894303996, 5.930087226588121, -0.5800775250160191, 1.8505201573646857, -1.4923079552468335, -0.8387260447436018, -2.3982760418968527, -3.9056167078182966, 2.0816335352764073, 2.2274322293285485, 3.5556676878085387, -1.2330037783925865, -3.6198905547298743, -0.23374459331170813, -0.12329330662505517, 1.5295425614396285, -0.9348669287939488, 4.9487820734040735, 2.827146933227429, -5.7324597385306095, -0.15601376885365362, -6.795489343903403, 4.731317314702512, -6.47249339060725, 0.9463706462968576, -4.785605292127645, -3.532510756252225, 6.854300123865486, -6.816577638077534, 7.905590200356822, 2.527800300386066, -3.4365369596504522, 1.597699868343741, -2.70020448708511, 0.1378224695933116, -2.611422637863907, -6.142559686205131, 3.90347849593335, 3.450495301900001, -3.7453722847223934, -6.3262757638233245, -3.1769618039808343, -3.3077670477881576, 4.067636501308655, 1.1250931057732454, 2.435751894801423, -1.169787075095142, -1.0970421565056372, -1.4201576688032682, -9.501975210528455, 6.229727248380696, -4.701237739061726, 1.700503444212084, 7.616266664205343,
                },
        };

        if (rc.getType() == RobotType.SOLDIER)
        {
            net = new FeedForwardNeuralNet(weights[0]);
            zombieNet = new FeedForwardNeuralNet(zombieWeights[0]);
        }
        else if (rc.getType() == RobotType.ARCHON)
        {
            net = new FeedForwardNeuralNet(weights[1]);
            zombieNet = new FeedForwardNeuralNet(zombieWeights[1]);
        }
        else if (rc.getType() == RobotType.GUARD)
        {
            net = new FeedForwardNeuralNet(weights[2]);
            zombieNet = new FeedForwardNeuralNet(zombieWeights[2]);
        }
        else if (rc.getType() == RobotType.SCOUT)
        {
            net = new FeedForwardNeuralNet(weights[3]);
            zombieNet = new FeedForwardNeuralNet(zombieWeights[3]);
        }
        else if (rc.getType() == RobotType.TURRET)
        {
            net = new FeedForwardNeuralNet(weights[4]);
            zombieNet = new FeedForwardNeuralNet(zombieWeights[4]);
        }
        else if (rc.getType() == RobotType.TTM)
        {
            net = new FeedForwardNeuralNet(weights[5]);
            zombieNet = new FeedForwardNeuralNet(zombieWeights[5]);
        }
        else if (rc.getType() == RobotType.VIPER)
        {
            net = new FeedForwardNeuralNet(weights[6]);
            zombieNet = new FeedForwardNeuralNet(zombieWeights[6]);
        }
    }

    public boolean basicFightMicro(RobotInfo[] nearByEnemies) throws GameActionException
    {
        if (nearByEnemies != null && nearByEnemies.length > 0)
        {
            for (int i = 0; i < nearByEnemies.length; i++)
            {
                if (rc.canAttackLocation(nearByEnemies[i].location) && rc.isWeaponReady())
                {
                    rc.attackLocation(nearByEnemies[i].location);
                    return true;
                }
            }
        }

        return false;
    }

    public boolean basicNetFightMicro(RobotInfo[] nearByEnemies, RobotInfo[] nearByAllies, RobotInfo[] enemies, RobotInfo[] allies, MapLocation target) throws GameActionException
    {
        if (enemies == null || enemies.length == 0)
        {
            return false;
        }

        double[] inputs = getInputs1(enemies,allies, nearByEnemies);
        int enemy_x = (int) inputs[6];
        int enemy_y = (int) inputs[7];
        int ally_x = (int) inputs[8];
        int ally_y = (int) inputs[9];
        int offensiveEnemies = (int) (inputs[0] * 10);

        Direction dir;

        boolean retreat = false;
        boolean advance = false;
        boolean cluster = false;
        boolean pursue = false;
        double[] output = net.compute(new double[]{inputs[0], inputs[1], inputs[2], inputs[3], inputs[4], inputs[5]});

        // retreat
        if (output[0] > 0.5)
        {
            retreat = true;
        }

        // advance
        if (output[1] > 0.5) {
            advance = true;
        }

        // cluster
        if (output[2] > 0.5) {
            cluster = true;
        }

        // pursue
        if (output[3] > 0.5) {
            pursue = true;
        }

        if (rc.isCoreReady() && offensiveEnemies > 0) {
            if (retreat) {
                MapLocation enemy = new MapLocation(enemy_x, enemy_y);
                dir = rc.getLocation().directionTo(enemy).opposite();
                FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);
            }

            if (rc.isCoreReady() && cluster) {
                MapLocation ally = new MapLocation(ally_x, ally_y);
                dir = rc.getLocation().directionTo(ally);
                FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);
            }

            if (rc.isCoreReady() && advance) {
                dir = FightMicroUtilites.getDir(rc, target);
                FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);
            }

            if (rc.isCoreReady() && pursue) {
                MapLocation enemy = new MapLocation(enemy_x, enemy_y);
                dir = rc.getLocation().directionTo(enemy);
                FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);
            }
        }
        // pursue
        else if (offensiveEnemies == 0 && rc.isCoreReady() && (!rc.isWeaponReady() || nearByEnemies.length == 0))
        {
            MapLocation enemy = new MapLocation(enemy_x, enemy_y);
            dir = rc.getLocation().directionTo(enemy);
            FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);
        }

        if (rc.isWeaponReady() && nearByEnemies.length > 0) {
            try {
                RobotInfo weakEnemy = FightMicroUtilites.findWeakestEnemy(nearByEnemies);
                if (weakEnemy != null) {
                    MapLocation attackSpot = weakEnemy.location;
                    if (attackSpot != null && rc.canAttackLocation(attackSpot)) {
                        rc.attackLocation(attackSpot);
                    }

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return true;
    }

    public boolean basicNetZombieFightMicro(RobotInfo[] nearByEnemies, RobotInfo[] nearByAllies, RobotInfo[] enemies, RobotInfo[] allies, MapLocation target) throws GameActionException
    {
        if (nearByEnemies == null || nearByEnemies.length == 0)
        {
            return false;
        }

        double[] inputs = getInputs1(enemies,allies, nearByEnemies);
        int enemy_x = (int) inputs[6];
        int enemy_y = (int) inputs[7];
        int ally_x = (int) inputs[8];
        int ally_y = (int) inputs[9];
        int offensiveEnemies = (int) (inputs[0] * 10);

        Direction dir;

        boolean retreat = false;
        boolean advance = false;
        boolean cluster = false;
        boolean pursue = false;
        double[] output = zombieNet.compute(new double[]{inputs[0], inputs[1], inputs[2], inputs[3], inputs[4], inputs[5]});

        // retreat
        if (output[0] > 0.5)
        {
            retreat = true;
        }

        // advance
        if (output[1] > 0.5) {
            advance = true;
        }

        // cluster
        if (output[2] > 0.5) {
            cluster = true;
        }

        // pursue
        if (output[3] > 0.5) {
            pursue = true;
        }

        if (rc.isWeaponReady() && nearByEnemies.length > 0) {
            try {
                RobotInfo weakEnemy = FightMicroUtilites.findWeakestEnemy(nearByEnemies);
                if (weakEnemy != null) {
                    MapLocation attackSpot = weakEnemy.location;
                    if (attackSpot != null && rc.canAttackLocation(attackSpot)) {
                        rc.attackLocation(attackSpot);
                    }
                }
            } catch (Exception e) {
                System.out.println("failed when trying to attack");
                e.printStackTrace();
            }
        }

        if (inputs[5] * 10 > 0)
        {
            retreat = true;
        }
        else
        {
            retreat = false;
        }

        if (rc.isCoreReady() && offensiveEnemies > 0) {
            if (retreat) {
                MapLocation enemy = new MapLocation(enemy_x, enemy_y);
                dir = rc.getLocation().directionTo(enemy).opposite();
                FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);
            }

            if (rc.isCoreReady() && cluster) {
                MapLocation ally = new MapLocation(ally_x, ally_y);
                dir = rc.getLocation().directionTo(ally);
                FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);
            }

            if (rc.isCoreReady() && advance) {
                dir = FightMicroUtilites.getDir(rc, target);
                FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);
            }

            if (rc.isCoreReady() && pursue)
            {
                MapLocation enemy = new MapLocation(enemy_x, enemy_y);
                dir = rc.getLocation().directionTo(enemy);
                FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);
            }
        }
        // pursue
        else if (offensiveEnemies == 0 && rc.isCoreReady() && (!rc.isWeaponReady() || nearByEnemies.length == 0))
        {
            MapLocation enemy = new MapLocation(enemy_x, enemy_y);
            dir = rc.getLocation().directionTo(enemy);
            FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);

        }

        return true;
    }

    public boolean runPassiveFightMicro(RobotInfo[] enemies, RobotInfo[] nearByAllies, RobotInfo[] allies, MapLocation target, RobotInfo[] nearByEnemies) throws GameActionException
    {
        if (enemies.length == 0)
        {
            return false;
        }

        double[] inputs = getInputs1(enemies,allies, nearByEnemies);
        int enemy_x = (int) inputs[6];
        int enemy_y = (int) inputs[7];
        int ally_x = (int) inputs[8];
        int ally_y = (int) inputs[9];

        Direction dir;

        boolean retreat = false;
        boolean advance = false;
        boolean cluster = false;
        double[] output = net.compute(new double[]{inputs[0], inputs[1], inputs[2], inputs[3], inputs[4], inputs[5]});

        // retreat
        if (output[0] > 0.5)
        {
            retreat = true;
        }

        // advance
        if (output[1] > 0.5) {
            advance = true;
        }

        // cluster
        if (output[2] > 0.5) {
            cluster = true;
        }

        if (rc.isCoreReady()) {
            if (retreat) {
                MapLocation enemy = new MapLocation(enemy_x, enemy_y);
                dir = rc.getLocation().directionTo(enemy).opposite();
                FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);
            }

//            if (rc.isCoreReady() && cluster) {
//                MapLocation ally = new MapLocation(ally_x, ally_y);
//                dir = rc.getLocation().directionTo(ally);
//                FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);
//            }
//
//            if (rc.isCoreReady() && advance) {
//                dir = FightMicroUtilites.getDir(rc, target);
//                FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);
//            }

            if (rc.isCoreReady()) {
                MapLocation enemy = new MapLocation(enemy_x, enemy_y);
                dir = rc.getLocation().directionTo(enemy).opposite();
                FightMicroUtilites.moveDir(rc, dir, nearByEnemies.length == 0);
            }
        }

        return true;
    }

    public MapLocation ArchonRunAway(RobotInfo[] enemies, RobotInfo[] allies) throws GameActionException
    {
        int len = enemies.length;
        if (len == 0)
            return null;

        int offensiveEnemies = 0;
        int enemiesInRangeOfUs = 0, x = 0, y = 0;
        MapLocation current = rc.getLocation();

        for (int i = len; --i>=0; )
        {
            RobotType type = enemies[i].type;
            switch (type)
            {
                case TURRET:
                case GUARD:
                case SOLDIER:
                case VIPER:
                case RANGEDZOMBIE:
                case STANDARDZOMBIE:
                case FASTZOMBIE:
                case BIGZOMBIE:
                    offensiveEnemies++;
                    MapLocation enemy = enemies[i].location;
                    x += enemy.x;
                    y += enemy.y;
                    if (current.distanceSquaredTo(enemy) <= type.attackRadiusSquared)
                    {
                        enemiesInRangeOfUs++;
                    }
                    break;
            }
        }

        if (offensiveEnemies == 0)
            return null;


        int offensiveAllies = 0;

        for (int i = allies.length; --i>=0;)
        {
            switch (allies[i].type)
            {
                case VIPER:
                case SOLDIER:
                case GUARD:
                case TURRET:
                    offensiveAllies++;
            }
        }

        if (enemiesInRangeOfUs == 0 && offensiveAllies > len)
            return current;

        x /= len;
        y /= len;

        MapLocation enemyCOM = new MapLocation(x,y);
        MapLocation runAwaySpot = current.add(enemyCOM.directionTo(current), 4);

        if (enemyCOM.equals(current) || !rc.onTheMap(runAwaySpot))
        {
            int[] totalDist = new int[8];

            for (int i = totalDist.length; --i >= 0; )
            {
                MapLocation tempTarget = current.add(Unit.dirs[i], 4);
                totalDist[i] = 0;

                if (rc.onTheMap(tempTarget))
                {
                    for (int j = enemies.length; --j>=0; )
                    {
                        totalDist[i] += Math.sqrt(tempTarget.distanceSquaredTo(enemies[j].location));
                    }
                }
            }

            int highestDist = 0;
            int highestIndex = 0;

            for (int i = totalDist.length; --i>=0; )
            {
                if (highestDist < totalDist[i])
                {
                    highestDist = totalDist[i];
                    highestIndex = i;
                }
            }

            rc.setIndicatorString(2, "Direction: " + Unit.dirs[highestIndex]);
            runAwaySpot = current.add(Unit.dirs[highestIndex], 4);
        }

        rc.setIndicatorString(1, "x: " + runAwaySpot.x + " y: " + runAwaySpot.y);

        return runAwaySpot;
    }

    /**
     * This method runs turretFightMicro
     *
     * @param nearByEnemies
     * @param nearByZombies
     * @param enemies
     * @param allies
     * @param target
     * @return
     * @throws GameActionException
     */
    public boolean turretFightMicro(RobotInfo[] nearByEnemies, RobotInfo[] nearByZombies, RobotInfo[] enemies, RobotInfo[] allies, MapLocation target, Communication[] communications) throws GameActionException
    {
        if (!rc.isWeaponReady())
            return false;

        MapLocation bestTarget = FightMicroUtilites.getTurretAttackPoint(nearByEnemies, rc, communications);

        if (bestTarget != null && rc.canAttackLocation(bestTarget))
        {
            rc.attackLocation(bestTarget);
            return true;
        }

        bestTarget = FightMicroUtilites.getBestTurretTarget(nearByZombies, rc);

        if (bestTarget != null && rc.canAttackLocation(bestTarget))
        {
            rc.attackLocation(bestTarget);
            return true;
        }

        return false;
    }

    public double[] getInputs1(RobotInfo[] enemies, RobotInfo[] allies, RobotInfo[] nearByEnemies)
    {
        double alliedHealth = 0;
        double enemyHealth = 0;
        double offensiveEnemies = 0;
        double enemiesInRangeOfUs = 0;
        int enemy_x = 0;
        int enemy_y = 0;
        int ally_x = 0;
        int ally_y = 0;

        for (int i = 0; i < enemies.length; i++)
        {
            enemy_x += enemies[i].location.x;
            enemy_y += enemies[i].location.y;
            switch(enemies[i].type)
            {
                case VIPER:
                case SOLDIER:
                case GUARD:
                case BIGZOMBIE:
                case FASTZOMBIE:
                case STANDARDZOMBIE:
                case RANGEDZOMBIE:
                case TURRET:
                    offensiveEnemies++;
                    enemyHealth += enemies[i].health;
                    if (rc.getLocation().distanceSquaredTo(enemies[i].location) <= enemies[i].type.attackRadiusSquared)
                        enemiesInRangeOfUs++;
            }
        }

        enemy_x /= enemies.length;
        enemy_y /= enemies.length;

        for (int i = allies.length; --i >= 0; )
        {
            alliedHealth += allies[i].health;
            ally_x += allies[i].location.x;
            ally_y += allies[i].location.y;
        }

        if (allies.length > 0)
        {
            ally_x /= allies.length;
            ally_y /= allies.length;
        }

        double[] inputs = new double[] {
                offensiveEnemies / 10,
                allies.length / 10,
                alliedHealth / 10,
                enemyHealth / 10,
                nearByEnemies.length / 10,
                enemiesInRangeOfUs / 10,
                enemy_x,
                enemy_y,
                ally_x,
                ally_y
        };

        return inputs;
    }

    /**
     * This method is an agressive fight micro that uses vipers specially ability to target allies in correct situations
     *
     * @param nearByEnemies
     * @param enemies
     * @param nearByAllies
     * @return
     * @throws GameActionException
     */
    public boolean aggressiveFightMicro(RobotInfo[] nearByEnemies, RobotInfo[] enemies, RobotInfo[] nearByAllies) throws GameActionException
    {
        if (enemies.length == 0) return false;

        if (rc.isWeaponReady() && nearByEnemies.length > 0)
        {
            RobotInfo enemy = null;
            if (rc.getType() == RobotType.VIPER)
            {
                enemy = FightMicroUtilites.pickViperTarget(nearByAllies, nearByEnemies);
            }
            else
            {
                enemy = FightMicroUtilites.findWeakestEnemy(nearByEnemies);
            }

            if (enemy != null && rc.canAttackLocation(enemy.location))
            {
                rc.attackLocation(enemy.location);
                return true;
            }
        }

        if (nearByEnemies.length == 0 && rc.isCoreReady())
        {
            FightMicroUtilites.moveDir(rc, rc.getLocation().directionTo(enemies[0].location), true);
            return true;
        }

        return false;
    }

    /**
     * THis method causes a unit to run towards a target while trying to avoid enemies
     *
     * @param enemies
     * @param target
     * @return
     * @throws GameActionException
     */
    public boolean avoidEnemiesInRoute(RobotInfo[] enemies, MapLocation target) throws GameActionException
    {
        if (enemies.length == 0 || !rc.isCoreReady() || target == null || target.equals(rc.getLocation()))
            return false;

        Direction direction = rc.getLocation().directionTo(target);
        MapLocation next;
        boolean underAttack;
        int counter = 0;

        do
        {
            underAttack = false;
            if (counter % 2 == 0)
            {
                for (int i = 0; i < counter; i++)
                {
                    direction = direction.rotateRight();
                }
            }
            else
            {
                for (int i = 0; i < counter; i++)
                {
                    direction = direction.rotateLeft();
                }
            }

            next = rc.getLocation().add(direction);

            for (int i  = enemies.length; --i>=0;)
            {
                int dist = enemies[i].location.distanceSquaredTo(next);

                if (dist <= enemies[i].type.attackRadiusSquared)
                {
                    underAttack = true;
                    i = 0;
                }
            }

            counter++;
        } while (underAttack && counter <= 4);

        if (underAttack)
            return false;

        FightMicroUtilites.moveDir(rc, direction, false);

        return true;
    }

    /**
     * This is basic fight micro against zombies
     *
     * @param zombies
     * @param nearByZombies
     * @return
     */
    public boolean guardZombieMicro(RobotInfo[] zombies, RobotInfo[] nearByZombies, RobotInfo[] allies) throws GameActionException
    {
        int len = zombies.length;
        if (len == 0) return false;

        int x = 0, y = 0;
        MapLocation enemyCOM;

        for (int i = len; --i>=0; )
        {
            MapLocation spot = zombies[i].location;
            x += spot.x;
            y += spot.y;
        }

        enemyCOM = new MapLocation(x / len, y / len);

        // don't turn into zombie so flee if you have low health
        if (rc.getHealth() <= 25 && rc.isCoreReady())
        {
            FightMicroUtilites.moveDir(rc, enemyCOM.directionTo(rc.getLocation()), false);
        }

        if (rc.isWeaponReady() && nearByZombies.length > 0)
        {
            RobotInfo weakest = FightMicroUtilites.findWeakestEnemy(nearByZombies);

            if (rc.canAttackLocation(weakest.location))
            {
                rc.attackLocation(weakest.location);
                return true;
            }
        }

        // if there are enemy zombies in range of us kite back
        if (rc.isCoreReady() && nearByZombies.length > 0)
        {
            FightMicroUtilites.moveDir(rc, enemyCOM.directionTo(rc.getLocation()), false);
        }

        // if we are outranged then rush them!!!

        if (rc.isCoreReady())
        {
            boolean outRanged = false;
            boolean alliesEngaged = false;
            MapLocation rushLoc = null;

            for (int i = zombies.length; --i>=0; )
            {
                if (zombies[i].type == RobotType.RANGEDZOMBIE)
                {

                    outRanged = true;
                    rushLoc = zombies[i].location;
                    break;
                }
            }

            if (!outRanged)
            {
                for (int i = allies.length; --i>=0; )
                {
                    for (int j = zombies.length; --j>=0; )
                    {
                        MapLocation ally = allies[i].location;
                        MapLocation enemy = zombies[j].location;

                        if (ally.distanceSquaredTo(enemy) < zombies[j].type.attackRadiusSquared)
                        {
                            rushLoc = ally;
                            alliesEngaged = true;

                            // break out of both loops
                            i = -1;
                            j = -1;
                        }
                    }
                }
            }

            if (outRanged || alliesEngaged)
            {
                FightMicroUtilites.moveDir(rc, rc.getLocation().directionTo(rushLoc), false);
            }
        }

        return false;
    }

    /**
     * THis method determines if there are any enemies in range of a location
     *
     * @param loc
     * @param enemies
     * @return
     */
    public boolean EnemiesInRangeOfLoc(MapLocation loc, RobotInfo[] enemies)
    {
        for (int i = enemies.length; --i>=0; )
        {
            if (enemies[i].location.distanceSquaredTo(loc) <= enemies[i].type.attackRadiusSquared)
            {
                return true;
            }
        }

        return false;
    }

    /**
     * THis method determines if there are any enemies in range of a location
     *
     * @param loc
     * @param enemies
     * @return
     */
    public int NumbOfEnemiesInRangeOfLoc(MapLocation loc, RobotInfo[] enemies)
    {
        int count = 0;
        for (int i = enemies.length; --i>=0; )
        {
            if (enemies[i].location.distanceSquaredTo(loc) <= enemies[i].type.attackRadiusSquared)
            {
                count++;
            }
        }

        return count;
    }
}
